name: Deploy ROMI Task Manager to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AZURE_WEBAPP_PACKAGE_PATH: './app'
  AZURE_WEBAPP_NAME: 'romi-node-webapp-12345'

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: üõéÔ∏è Checkout code
      uses: actions/checkout@v4

    - name: üèóÔ∏è Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/package-lock.json

    - name: üì¶ Install dependencies
      run: |
        cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        npm ci
        
    - name: üîß Build React frontend
      run: |
        cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        npm run build
        
    - name: üì¶ Prepare deployment package
      run: |
        cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        # Crear directorio de deployment
        mkdir -p deployment
        # Copiar archivos del servidor
        cp server.js deployment/
        cp package.json deployment/
        cp package-lock.json deployment/
        # Copiar archivos de configuraci√≥n de deployment
        cp .deployment deployment/
        cp deploy.cmd deployment/
        # Copiar archivos necesarios para la aplicaci√≥n
        cp -r src/ deployment/
        # Copiar build del frontend
        cp -r build/ deployment/
        
    - name: üìã List deployment contents
      run: |
        cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        echo "Deployment directory structure:"
        find deployment -type f | head -20

    - name: üöÄ Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './app/deployment'
