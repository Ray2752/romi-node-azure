{"ast":null,"code":"import _objectSpread from\"C:/Users/perez/Documents/romi-node-azure/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{AppBar,Toolbar,Typography,Container,Box,Card,CardContent,IconButton,Alert,Menu,Badge,MenuItem,Chip,Grid,Snackbar}from'@mui/material';import{Dashboard as DashboardIcon,Notifications as NotificationsIcon,AccountCircle as AccountIcon}from'@mui/icons-material';// Components\nimport DashboardView from'./components/DashboardView';import NavigationDrawer from'./components/NavigationDrawer';import TaskDialog from'./components/TaskDialog';// Types and Utils\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State Management\nconst[tasks,setTasks]=useState([]);const[currentView,setCurrentView]=useState('dashboard');const[drawerOpen,setDrawerOpen]=useState(false);const[anchorEl,setAnchorEl]=useState(null);const[openTaskDialog,setOpenTaskDialog]=useState(false);const[editingTask,setEditingTask]=useState(null);const[snackbarOpen,setSnackbarOpen]=useState(false);const[snackbarMessage,setSnackbarMessage]=useState('');// Form state for new/edit task\nconst[taskForm,setTaskForm]=useState({title:'',description:'',status:'todo',priority:'medium',category:'',dueDate:'',tags:[]});// Initialize demo data\nuseEffect(()=>{const demoTasks=[{id:'1',title:'Diseñar interfaz de usuario',description:'Crear mockups y prototipos para la nueva aplicación web',status:'in-progress',priority:'high',category:'Diseño',dueDate:'2025-08-25',completed:false,createdAt:'2025-08-15',tags:['UI/UX','Figma','Frontend']},{id:'2',title:'Configurar base de datos',description:'Instalar y configurar PostgreSQL con las tablas necesarias',status:'completed',priority:'urgent',category:'Backend',dueDate:'2025-08-20',completed:true,createdAt:'2025-08-10',tags:['Database','PostgreSQL','Backend']},{id:'3',title:'Escribir documentación',description:'Documentar la API REST y crear guías de usuario',status:'todo',priority:'medium',category:'Documentación',dueDate:'2025-08-30',completed:false,createdAt:'2025-08-18',tags:['Docs','API','Manual']},{id:'4',title:'Pruebas unitarias',description:'Implementar suite completa de tests para componentes React',status:'todo',priority:'high',category:'Testing',dueDate:'2025-08-28',completed:false,createdAt:'2025-08-16',tags:['Testing','Jest','React']},{id:'5',title:'Optimizar rendimiento',description:'Revisar y mejorar el tiempo de carga de la aplicación',status:'in-progress',priority:'medium',category:'Performance',dueDate:'2025-09-05',completed:false,createdAt:'2025-08-12',tags:['Performance','Optimization','Frontend']}];setTasks(demoTasks);},[]);// Task Management Functions\nconst handleAddTask=()=>{setEditingTask(null);setTaskForm({title:'',description:'',status:'todo',priority:'medium',category:'',dueDate:'',tags:[]});setOpenTaskDialog(true);};const handleEditTask=task=>{setEditingTask(task);setTaskForm({title:task.title,description:task.description,status:task.status,priority:task.priority,category:task.category,dueDate:task.dueDate,tags:task.tags});setOpenTaskDialog(true);};const handleSaveTask=()=>{if(!taskForm.title.trim()){setSnackbarMessage('El título es obligatorio');setSnackbarOpen(true);return;}if(editingTask){// Edit existing task\nsetTasks(prev=>prev.map(task=>task.id===editingTask.id?_objectSpread(_objectSpread(_objectSpread({},task),taskForm),{},{completed:taskForm.status==='completed'}):task));setSnackbarMessage('Tarea actualizada exitosamente');}else{// Add new task\nconst newTask=_objectSpread(_objectSpread({id:Date.now().toString()},taskForm),{},{completed:taskForm.status==='completed',createdAt:new Date().toISOString().split('T')[0]});setTasks(prev=>[...prev,newTask]);setSnackbarMessage('Tarea creada exitosamente');}setOpenTaskDialog(false);setSnackbarOpen(true);};const handleDeleteTask=taskId=>{setTasks(prev=>prev.filter(task=>task.id!==taskId));setSnackbarMessage('Tarea eliminada');setSnackbarOpen(true);};const handleToggleTaskStatus=taskId=>{setTasks(prev=>prev.map(task=>{if(task.id===taskId){const newStatus=task.status==='completed'?'todo':'completed';return _objectSpread(_objectSpread({},task),{},{status:newStatus,completed:newStatus==='completed'});}return task;}));};const handleFormChange=(field,value)=>{setTaskForm(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',minHeight:'100vh'},children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",elevation:0,children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{edge:\"start\",color:\"inherit\",onClick:()=>setDrawerOpen(true),sx:{mr:2},children:/*#__PURE__*/_jsx(DashboardIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",sx:{flexGrow:1},children:\"\\uD83D\\uDCDD Task Manager\"}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",children:/*#__PURE__*/_jsx(Badge,{badgeContent:4,color:\"error\",children:/*#__PURE__*/_jsx(NotificationsIcon,{})})}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:e=>setAnchorEl(e.currentTarget),children:/*#__PURE__*/_jsx(AccountIcon,{})}),/*#__PURE__*/_jsx(Chip,{label:\"v1.0\",color:\"secondary\",size:\"small\",sx:{ml:2}})]})}),/*#__PURE__*/_jsx(NavigationDrawer,{open:drawerOpen,currentView:currentView,onClose:()=>setDrawerOpen(false),onViewChange:setCurrentView}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{mt:10,mb:4,flexGrow:1},children:[/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:3},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\xA1Bienvenido a Task Manager!\"}),\" Organiza y gestiona tus tareas de manera eficiente.\"]}),currentView==='dashboard'&&/*#__PURE__*/_jsx(DashboardView,{tasks:tasks,onAddTask:handleAddTask,onEditTask:handleEditTask,onDeleteTask:handleDeleteTask,onToggleTaskStatus:handleToggleTaskStatus}),currentView==='tasks'&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Gesti\\xF3n de Tareas\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:\"Vista completa de todas tus tareas\"})]})}),currentView==='categories'&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Categor\\xEDas\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:\"Organiza tus tareas por categor\\xEDas\"})]})}),currentView==='settings'&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Configuraci\\xF3n\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:\"Personaliza tu experiencia de usuario\"})]})})]}),/*#__PURE__*/_jsx(Box,{component:\"footer\",sx:{py:3,px:2,backgroundColor:'grey.100',mt:'auto'},children:/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"\\xA9 2025 Task Manager - Gesti\\xF3n Personal de Tareas\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:{xs:'flex-start',md:'flex-end'},gap:1,children:[/*#__PURE__*/_jsx(Chip,{label:\"React App\",color:\"info\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:\"Material-UI\",color:\"success\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:\"TypeScript\",color:\"primary\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:\"Responsive\",color:\"warning\",size:\"small\"})]})})]})})}),/*#__PURE__*/_jsxs(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:()=>setAnchorEl(null),children:[/*#__PURE__*/_jsx(MenuItem,{onClick:()=>setAnchorEl(null),children:\"Mi Perfil\"}),/*#__PURE__*/_jsx(MenuItem,{onClick:()=>setAnchorEl(null),children:\"Configuraci\\xF3n\"}),/*#__PURE__*/_jsx(MenuItem,{onClick:()=>setAnchorEl(null),children:\"Cerrar Sesi\\xF3n\"})]}),/*#__PURE__*/_jsx(TaskDialog,{open:openTaskDialog,editingTask:editingTask,taskForm:taskForm,onClose:()=>setOpenTaskDialog(false),onSave:handleSaveTask,onFormChange:handleFormChange}),/*#__PURE__*/_jsx(Snackbar,{open:snackbarOpen,autoHideDuration:3000,onClose:()=>setSnackbarOpen(false),message:snackbarMessage})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","AppBar","Toolbar","Typography","Container","Box","Card","CardContent","IconButton","Alert","Menu","Badge","MenuItem","Chip","Grid","Snackbar","Dashboard","DashboardIcon","Notifications","NotificationsIcon","AccountCircle","AccountIcon","DashboardView","NavigationDrawer","TaskDialog","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","currentView","setCurrentView","drawerOpen","setDrawerOpen","anchorEl","setAnchorEl","openTaskDialog","setOpenTaskDialog","editingTask","setEditingTask","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","taskForm","setTaskForm","title","description","status","priority","category","dueDate","tags","demoTasks","id","completed","createdAt","handleAddTask","handleEditTask","task","handleSaveTask","trim","prev","map","_objectSpread","newTask","Date","now","toString","toISOString","split","handleDeleteTask","taskId","filter","handleToggleTaskStatus","newStatus","handleFormChange","field","value","sx","display","flexDirection","minHeight","children","position","elevation","edge","color","onClick","mr","variant","component","flexGrow","badgeContent","e","currentTarget","label","size","ml","open","onClose","onViewChange","maxWidth","mt","mb","severity","onAddTask","onEditTask","onDeleteTask","onToggleTaskStatus","py","px","backgroundColor","container","spacing","alignItems","item","xs","md","justifyContent","gap","Boolean","onSave","onFormChange","autoHideDuration","message"],"sources":["C:/Users/perez/Documents/romi-node-azure/app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Alert,\r\n  Menu,\r\n  Badge,\r\n  MenuItem,\r\n  Chip,\r\n  Grid,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Notifications as NotificationsIcon,\r\n  AccountCircle as AccountIcon\r\n} from '@mui/icons-material';\r\n\r\n// Components\r\nimport DashboardView from './components/DashboardView';\r\nimport NavigationDrawer from './components/NavigationDrawer';\r\nimport TaskDialog from './components/TaskDialog';\r\n\r\n// Types and Utils\r\nimport { Task, TaskFormData } from './components/types';\r\n\r\nfunction App() {\r\n  // State Management\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [currentView, setCurrentView] = useState('dashboard');\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [openTaskDialog, setOpenTaskDialog] = useState(false);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n  // Form state for new/edit task\r\n  const [taskForm, setTaskForm] = useState<TaskFormData>({\r\n    title: '',\r\n    description: '',\r\n    status: 'todo',\r\n    priority: 'medium',\r\n    category: '',\r\n    dueDate: '',\r\n    tags: []\r\n  });\r\n\r\n  // Initialize demo data\r\n  useEffect(() => {\r\n    const demoTasks: Task[] = [\r\n      {\r\n        id: '1',\r\n        title: 'Diseñar interfaz de usuario',\r\n        description: 'Crear mockups y prototipos para la nueva aplicación web',\r\n        status: 'in-progress',\r\n        priority: 'high',\r\n        category: 'Diseño',\r\n        dueDate: '2025-08-25',\r\n        completed: false,\r\n        createdAt: '2025-08-15',\r\n        tags: ['UI/UX', 'Figma', 'Frontend']\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'Configurar base de datos',\r\n        description: 'Instalar y configurar PostgreSQL con las tablas necesarias',\r\n        status: 'completed',\r\n        priority: 'urgent',\r\n        category: 'Backend',\r\n        dueDate: '2025-08-20',\r\n        completed: true,\r\n        createdAt: '2025-08-10',\r\n        tags: ['Database', 'PostgreSQL', 'Backend']\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Escribir documentación',\r\n        description: 'Documentar la API REST y crear guías de usuario',\r\n        status: 'todo',\r\n        priority: 'medium',\r\n        category: 'Documentación',\r\n        dueDate: '2025-08-30',\r\n        completed: false,\r\n        createdAt: '2025-08-18',\r\n        tags: ['Docs', 'API', 'Manual']\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'Pruebas unitarias',\r\n        description: 'Implementar suite completa de tests para componentes React',\r\n        status: 'todo',\r\n        priority: 'high',\r\n        category: 'Testing',\r\n        dueDate: '2025-08-28',\r\n        completed: false,\r\n        createdAt: '2025-08-16',\r\n        tags: ['Testing', 'Jest', 'React']\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Optimizar rendimiento',\r\n        description: 'Revisar y mejorar el tiempo de carga de la aplicación',\r\n        status: 'in-progress',\r\n        priority: 'medium',\r\n        category: 'Performance',\r\n        dueDate: '2025-09-05',\r\n        completed: false,\r\n        createdAt: '2025-08-12',\r\n        tags: ['Performance', 'Optimization', 'Frontend']\r\n      }\r\n    ];\r\n\r\n    setTasks(demoTasks);\r\n  }, []);\r\n\r\n  // Task Management Functions\r\n  const handleAddTask = () => {\r\n    setEditingTask(null);\r\n    setTaskForm({\r\n      title: '',\r\n      description: '',\r\n      status: 'todo',\r\n      priority: 'medium',\r\n      category: '',\r\n      dueDate: '',\r\n      tags: []\r\n    });\r\n    setOpenTaskDialog(true);\r\n  };\r\n\r\n  const handleEditTask = (task: Task) => {\r\n    setEditingTask(task);\r\n    setTaskForm({\r\n      title: task.title,\r\n      description: task.description,\r\n      status: task.status,\r\n      priority: task.priority,\r\n      category: task.category,\r\n      dueDate: task.dueDate,\r\n      tags: task.tags\r\n    });\r\n    setOpenTaskDialog(true);\r\n  };\r\n\r\n  const handleSaveTask = () => {\r\n    if (!taskForm.title.trim()) {\r\n      setSnackbarMessage('El título es obligatorio');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (editingTask) {\r\n      // Edit existing task\r\n      setTasks(prev => prev.map(task => \r\n        task.id === editingTask.id \r\n          ? { \r\n              ...task, \r\n              ...taskForm,\r\n              completed: taskForm.status === 'completed'\r\n            }\r\n          : task\r\n      ));\r\n      setSnackbarMessage('Tarea actualizada exitosamente');\r\n    } else {\r\n      // Add new task\r\n      const newTask: Task = {\r\n        id: Date.now().toString(),\r\n        ...taskForm,\r\n        completed: taskForm.status === 'completed',\r\n        createdAt: new Date().toISOString().split('T')[0]\r\n      };\r\n      setTasks(prev => [...prev, newTask]);\r\n      setSnackbarMessage('Tarea creada exitosamente');\r\n    }\r\n\r\n    setOpenTaskDialog(false);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleDeleteTask = (taskId: string) => {\r\n    setTasks(prev => prev.filter(task => task.id !== taskId));\r\n    setSnackbarMessage('Tarea eliminada');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleToggleTaskStatus = (taskId: string) => {\r\n    setTasks(prev => prev.map(task => {\r\n      if (task.id === taskId) {\r\n        const newStatus = task.status === 'completed' ? 'todo' : 'completed';\r\n        return {\r\n          ...task,\r\n          status: newStatus,\r\n          completed: newStatus === 'completed'\r\n        };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const handleFormChange = (field: keyof TaskFormData, value: any) => {\r\n    setTaskForm(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      {/* App Bar */}\r\n      <AppBar position=\"fixed\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={() => setDrawerOpen(true)}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <DashboardIcon />\r\n          </IconButton>\r\n          \r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            📝 Task Manager\r\n          </Typography>\r\n\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={(e) => setAnchorEl(e.currentTarget)}\r\n          >\r\n            <AccountIcon />\r\n          </IconButton>\r\n\r\n          <Chip \r\n            label=\"v1.0\" \r\n            color=\"secondary\" \r\n            size=\"small\" \r\n            sx={{ ml: 2 }}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Navigation Drawer */}\r\n      <NavigationDrawer\r\n        open={drawerOpen}\r\n        currentView={currentView}\r\n        onClose={() => setDrawerOpen(false)}\r\n        onViewChange={setCurrentView}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <Container maxWidth=\"xl\" sx={{ mt: 10, mb: 4, flexGrow: 1 }}>\r\n        {/* Welcome Alert */}\r\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          <strong>¡Bienvenido a Task Manager!</strong> Organiza y gestiona tus tareas de manera eficiente.\r\n        </Alert>\r\n\r\n        {/* Content based on current view */}\r\n        {currentView === 'dashboard' && (\r\n          <DashboardView\r\n            tasks={tasks}\r\n            onAddTask={handleAddTask}\r\n            onEditTask={handleEditTask}\r\n            onDeleteTask={handleDeleteTask}\r\n            onToggleTaskStatus={handleToggleTaskStatus}\r\n          />\r\n        )}\r\n        \r\n        {currentView === 'tasks' && (\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Gestión de Tareas</Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                Vista completa de todas tus tareas\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {currentView === 'categories' && (\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Categorías</Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                Organiza tus tareas por categorías\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {currentView === 'settings' && (\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Configuración</Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                Personaliza tu experiencia de usuario\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Footer */}\r\n      <Box \r\n        component=\"footer\" \r\n        sx={{ \r\n          py: 3, \r\n          px: 2, \r\n          backgroundColor: 'grey.100',\r\n          mt: 'auto'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                © 2025 Task Manager - Gestión Personal de Tareas\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box display=\"flex\" justifyContent={{ xs: 'flex-start', md: 'flex-end' }} gap={1}>\r\n                <Chip label=\"React App\" color=\"info\" size=\"small\" />\r\n                <Chip label=\"Material-UI\" color=\"success\" size=\"small\" />\r\n                <Chip label=\"TypeScript\" color=\"primary\" size=\"small\" />\r\n                <Chip label=\"Responsive\" color=\"warning\" size=\"small\" />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* User Menu */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        <MenuItem onClick={() => setAnchorEl(null)}>Mi Perfil</MenuItem>\r\n        <MenuItem onClick={() => setAnchorEl(null)}>Configuración</MenuItem>\r\n        <MenuItem onClick={() => setAnchorEl(null)}>Cerrar Sesión</MenuItem>\r\n      </Menu>\r\n\r\n      {/* Task Dialog */}\r\n      <TaskDialog\r\n        open={openTaskDialog}\r\n        editingTask={editingTask}\r\n        taskForm={taskForm}\r\n        onClose={() => setOpenTaskDialog(false)}\r\n        onSave={handleSaveTask}\r\n        onFormChange={handleFormChange}\r\n      />\r\n\r\n      {/* Snackbar for notifications */}\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        message={snackbarMessage}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}