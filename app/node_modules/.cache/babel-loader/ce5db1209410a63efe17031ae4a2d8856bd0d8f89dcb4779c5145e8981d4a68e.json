{"ast":null,"code":"import React from'react';import{Card,CardContent,Box,Typography,Button,TableContainer,Table,TableHead,TableRow,TableCell,TableBody,Chip,IconButton}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,CheckCircle as CompleteIcon,DateRange as DateIcon,Category as CategoryIcon}from'@mui/icons-material';import{getStatusColor,getPriorityColor,getStatusIcon}from'./utils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskTable=_ref=>{let{tasks,onAddTask,onEditTask,onDeleteTask,onToggleTaskStatus}=_ref;return/*#__PURE__*/_jsx(Card,{elevation:2,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Tareas\"}),/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(AddIcon,{}),variant:\"contained\",onClick:onAddTask,children:\"Nueva Tarea\"})]}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"T\\xEDtulo\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Estado\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Prioridad\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Vencimiento\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Categor\\xEDa\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Etiquetas\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Acciones\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:tasks.map(task=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:task.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:task.description})]}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:getStatusIcon(task.status),label:task.status,color:getStatusColor(task.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:task.priority,color:getPriorityColor(task.priority),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(DateIcon,{}),label:task.dueDate,color:new Date(task.dueDate)<new Date()&&!task.completed?'error':'default',size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(CategoryIcon,{}),label:task.category,color:\"default\",size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:task.tags.map((tag,idx)=>/*#__PURE__*/_jsx(Chip,{label:tag,size:\"small\",sx:{mr:0.5}},idx))}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>onEditTask(task),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>onDeleteTask(task.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>onToggleTaskStatus(task.id),children:/*#__PURE__*/_jsx(CompleteIcon,{})})]})]},task.id))})]})})]})});};export default TaskTable;","map":{"version":3,"names":["React","Card","CardContent","Box","Typography","Button","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Chip","IconButton","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","CheckCircle","CompleteIcon","DateRange","DateIcon","Category","CategoryIcon","getStatusColor","getPriorityColor","getStatusIcon","jsx","_jsx","jsxs","_jsxs","TaskTable","_ref","tasks","onAddTask","onEditTask","onDeleteTask","onToggleTaskStatus","elevation","children","display","justifyContent","alignItems","mb","variant","startIcon","onClick","map","task","title","color","description","icon","status","label","size","priority","dueDate","Date","completed","category","tags","tag","idx","sx","mr","id"],"sources":["C:/Users/perez/Documents/romi-node-azure/app/src/components/TaskTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Chip,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  CheckCircle as CompleteIcon,\r\n  DateRange as DateIcon,\r\n  Category as CategoryIcon\r\n} from '@mui/icons-material';\r\nimport { Task } from './types';\r\nimport { getStatusColor, getPriorityColor, getStatusIcon } from './utils';\r\n\r\ninterface TaskTableProps {\r\n  tasks: Task[];\r\n  onAddTask: () => void;\r\n  onEditTask: (task: Task) => void;\r\n  onDeleteTask: (taskId: string) => void;\r\n  onToggleTaskStatus: (taskId: string) => void;\r\n}\r\n\r\nconst TaskTable: React.FC<TaskTableProps> = ({\r\n  tasks,\r\n  onAddTask,\r\n  onEditTask,\r\n  onDeleteTask,\r\n  onToggleTaskStatus\r\n}) => {\r\n  return (\r\n    <Card elevation={2}>\r\n      <CardContent>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n          <Typography variant=\"h6\">Tareas</Typography>\r\n          <Button\r\n            startIcon={<AddIcon />}\r\n            variant=\"contained\"\r\n            onClick={onAddTask}\r\n          >\r\n            Nueva Tarea\r\n          </Button>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Título</TableCell>\r\n                <TableCell>Estado</TableCell>\r\n                <TableCell>Prioridad</TableCell>\r\n                <TableCell>Vencimiento</TableCell>\r\n                <TableCell>Categoría</TableCell>\r\n                <TableCell>Etiquetas</TableCell>\r\n                <TableCell>Acciones</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tasks.map((task) => (\r\n                <TableRow key={task.id}>\r\n                  <TableCell>\r\n                    <Typography variant=\"subtitle1\">{task.title}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {task.description}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      icon={getStatusIcon(task.status)}\r\n                      label={task.status}\r\n                      color={getStatusColor(task.status) as any}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={task.priority}\r\n                      color={getPriorityColor(task.priority) as any}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      icon={<DateIcon />}\r\n                      label={task.dueDate}\r\n                      color={new Date(task.dueDate) < new Date() && !task.completed ? 'error' : 'default'}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      icon={<CategoryIcon />}\r\n                      label={task.category}\r\n                      color=\"default\"\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {task.tags.map((tag, idx) => (\r\n                      <Chip key={idx} label={tag} size=\"small\" sx={{ mr: 0.5 }} />\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton size=\"small\" onClick={() => onEditTask(task)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => onDeleteTask(task.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => onToggleTaskStatus(task.id)}>\r\n                      <CompleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}